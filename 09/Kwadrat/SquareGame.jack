// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Square/SquareGame.jack

/**
 * Implements the Square Dance game.
 * This simple game allows the user to move a black square around
 * the screen, and change the square's size during the movement.
 * When the game starts, a square of 30 by 30 pixels is shown at the
 * top-left corner of the screen. The user controls the square as follows.
 * The 4 arrow keys are used to move the square up, down, left, and right.
 * The 'z' and 'x' keys are used, respectively, to decrement and increment
 * the square's size. The 'q' key is used to quit the game.
 */

class SquareGame {
   field Kwadrat kwadrat; // the square of this game
   field int direction; // the square's current direction: 0=left, 1=right 
   field int alfa       // the square's rotation angle in DEG 

   /** Constructs a new Square Game. */
   constructor SquareGame new() {
      // Creates a 30 by 30 pixels square
      let kwadrat = Kwadrat.new(30);
      let direction = 0;  // turn left
      let alfa =0;
      return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do kwadrat.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the square in the current direction. */
   method void turnSquere() {
      if (direction = 0) { do kwadrat.turn(1); }
      if (direction = 1) { do kwadrat.turn(-1); }
      return;
   }

   /** Runs the game: handles the user's inputs and moves the square accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
      let key = Keyboard.keyPressed();         
         if(~(key=0))
         {
         if (key = 81)  { let exit = true; }     // q key
         if (key = 130) { let direction = 0; }   // left arrow
         if (key = 132) { let direction = 1; }   // right arrow
         }
         do turnSquere();

         //rysowanie 
         kwadrat.clear();
         kwadrat.draw();
         Sys.wait(10);
     } // while
     return;
   }
}



